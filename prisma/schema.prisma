generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int        @id @default(autoincrement())
  email          String     @unique
  password       String?
  nickname       String     @unique
  profileImage   String?
  authProvider   String     @default("email")
  authProviderId String?
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  likes          Like[]
  playlists      Playlist[]
  sessions       Session?
}

model Playlist {
  id          Int           @id @default(autoincrement())
  userId      Int
  title       String
  description String?
  coverImage  String?
  likesCount  Int           @default(0)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  likes       Like[]
  user        User          @relation(fields: [userId], references: [id])
  tags        PlaylistTag[]
  videos      Video[]

  @@index([userId])
}

model Video {
  id           Int      @id @default(autoincrement())
  playlistId   Int
  youtubeId    String
  title        String
  channelName  String
  thumbnailUrl String
  duration     Int
  order        Int      @default(0)
  createdAt    DateTime @default(now())
  playlist     Playlist @relation(fields: [playlistId], references: [id])

  @@index([playlistId, order])
}

model Tag {
  id        Int           @id @default(autoincrement())
  name      String        @unique
  playlists PlaylistTag[]
}

model PlaylistTag {
  playlistId Int
  tagId      Int
  playlist   Playlist @relation(fields: [playlistId], references: [id])
  tag        Tag      @relation(fields: [tagId], references: [id])

  @@id([playlistId, tagId])
  @@index([tagId])
}

model Like {
  id         Int      @id @default(autoincrement())
  userId     Int
  playlistId Int
  createdAt  DateTime @default(now())
  playlist   Playlist @relation(fields: [playlistId], references: [id])
  user       User     @relation(fields: [userId], references: [id])

  @@index([userId, playlistId])
  @@index([playlistId], map: "Like_playlistId_fkey")
}

model Session {
  id           Int      @id @default(autoincrement())
  userId       Int      @unique
  accessToken  String
  refreshToken String
  expiresAt    DateTime
  user         User     @relation(fields: [userId], references: [id])
}
